
// define a struct complex use typedef to read two complex numbers and perform addition and substraction of these two complex numbers 
#include<stdio.h>

typedef struct{
  float real;
  float imag;
  
}complex;

int main()
{
    complex c1,c2,sum;
    
    printf("Enter the first complex number value a+bi ");
    scanf("%f %f",&c1.real,&c1.imag);
    
    printf("Enter the second complex number value a+bi ");
    
    scanf("%f %f",&c2.real,&c2.imag);
    
    sum.real = c1.real+c2.real;
    sum.imag = c1.imag+c2.imag;

    printf("The total sum is %.2f+%.2fj\n",sum.real,sum.imag);
    
    
    sum.real = c1.real-c2.real;
    sum.imag = c1.imag-c2.imag;
    printf("The total substraction is %.2f-%.2fj",sum.real,sum.imag);
    
    
}

























// Structure to pointer 
#include <stdio.h>
#include <string.h>

struct employee{
    int code;
    float salary;
    char name[10];
};
int main() {
    struct employee e1;
    struct employee* ptr;
    //here ptr is stroing the address of e1 using pointer to structure
    ptr = &e1;
    
    e1.code =5421;
    e1.salary = 25000.65;
    strcpy(e1.name,"Atharva");
    // this is using dereference operator
    printf("%s",(*ptr).name);
    // this is using arrow operator
    printf("%s",ptr->name);
    return 0;
}







//CRETE A TWO DIMENSIONAL VECTOR USING STRUCTURES
struct vector{
  int i;
  int j;
};

int main() {
    struct vector a ={1,2};
    printf("the vector is %di+%dj",a.i,a.j);

    return 0;
}






// write a function sumvector which returns the sum of two vectors passed to it , the vectors should be 2 d.
struct vector{
  int i;
  int j;
};

struct vector sumvector(struct vector v1,struct vector v2){
    struct vector v3 = {(v1.i+v2.i) ,(v1.j+v2.j)};
    return v3;
}

int main() {
    struct vector v1 ={1,2};
    struct vector v2 ={5,6};
    struct vector v3 = sumvector(v1,v2);
    printf("the sum of 2vector is %di+%dj\n",v3.i,v3.j);
    return 0;
}
